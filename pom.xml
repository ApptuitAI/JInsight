<?xml version="1.0" encoding="UTF-8"?>
<!--

Copyright 2017 Agilx, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-->
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>ai.apptuit</groupId>
  <artifactId>jinsight</artifactId>
  <version>0.1.1</version>
  <packaging>jar</packaging>

  <name>JInsight</name>
  <url>https://github.com/ApptuitAI/JInsight/</url>
  <inceptionYear>2017</inceptionYear>
  <scm>
    <url>https://github.com/ApptuitAI/JInsight</url>
    <connection>scm:git:git://github.com/ApptuitAI/jinsight.git</connection>
    <developerConnection>scm:git:git@github.com:ApptuitAI/jinsight.git</developerConnection>
  </scm>
  <issueManagement>
    <url>https://github.com/ApptuitAI/JInsight/issues</url>
    <system>GitHub Issues</system>
  </issueManagement>
  <licenses>
    <license>
      <name>Apache 2.0</name>
      <url>https://github.com/ApptuitAI/JInsight/blob/master/LICENSE</url>
    </license>
  </licenses>

  <distributionManagement>
    <repository>
      <id>bintray-apptuitai-jinsight</id>
      <name>apptuitai-jinsight</name>
      <url>https://api.bintray.com/maven/apptuitai/maven/jinsight/;publish=1</url>
    </repository>
  </distributionManagement>


  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!-- Version Properties -->
    <maven.compiler.target>1.8</maven.compiler.target>
    <maven.compiler.source>1.8</maven.compiler.source>
    <java.version>1.8</java.version>
    <maven.version>3.2</maven.version>
    <netty.version>4.1.15.Final</netty.version>
    <surefire.version>2.20</surefire.version>
    <junit.version>4.12</junit.version>
    <powermock.version>1.7.3</powermock.version>
    <jacoco.version>0.7.9</jacoco.version>

    <!-- Acceptance Criteria -->
    <enforce.code.style>false</enforce.code.style>
    <ignore.license.checks>false</ignore.license.checks>
    <enforce.findbugs>true</enforce.findbugs>
    <minimum.coverage>0.25</minimum.coverage>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>4.5.3</version>
    </dependency>
    <dependency>
      <groupId>org.jboss.byteman</groupId>
      <artifactId>byteman</artifactId>
      <version>3.0.10</version>
    </dependency>
    <dependency>
      <groupId>io.dropwizard.metrics</groupId>
      <artifactId>metrics-core</artifactId>
      <version>3.2.4</version>
    </dependency>
    <!--
    Needed only for instrumenting Ehcache
    -->
    <dependency>
      <groupId>net.sf.ehcache</groupId>
      <artifactId>ehcache</artifactId>
      <version>2.10.4</version>
      <scope>provided</scope>
    </dependency>
    <!--
    Unit testing related dependencies
    -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>1.10.19</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-api-mockito</artifactId>
      <version>${powermock.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-module-junit4</artifactId>
      <version>${powermock.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-module-testng</artifactId>
      <version>${powermock.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jacoco</groupId>
      <artifactId>org.jacoco.agent</artifactId>
      <classifier>runtime</classifier>
      <version>${jacoco.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.awaitility</groupId>
      <artifactId>awaitility</artifactId>
      <version>3.0.0</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-codec-http</artifactId>
      <version>${netty.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-transport-native-epoll</artifactId>
      <version>${netty.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>

      <!-- Plugins for validate phase -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>2.17</version>
        <dependencies>
          <dependency>
            <groupId>com.puppycrawl.tools</groupId>
            <artifactId>checkstyle</artifactId>
            <version>8.2</version>
          </dependency>
        </dependencies>
        <configuration>
          <configLocation>google_checks.xml</configLocation>
          <encoding>UTF-8</encoding>
          <logViolationsToConsole>true</logViolationsToConsole>
          <failOnViolation>${enforce.code.style}</failOnViolation>
          <violationSeverity>warning</violationSeverity>
          <outputFile>${project.build.directory}/reports/checkstyle-results-java.xml
          </outputFile>
        </configuration>
        <executions>
          <execution>
            <id>java-style-check</id>
            <phase>validate</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.rat</groupId>
        <artifactId>apache-rat-plugin</artifactId>
        <version>0.12</version>
        <configuration>
          <ignoreErrors>${ignore.license.checks}</ignoreErrors>
          <reportStyle>xml</reportStyle>
          <reportFile>${project.build.directory}/reports/license-check-results.xml</reportFile>
        </configuration>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Plugins for test phase -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire.version}</version>
        <dependencies>
          <dependency>
            <groupId>org.apache.maven.surefire</groupId>
            <artifactId>surefire-junit4</artifactId>
            <version>${surefire.version}</version>
          </dependency>
        </dependencies>
        <configuration>
          <systemPropertyVariables>
            <jacoco-agent.destfile>${project.build.directory}/jacoco.exec</jacoco-agent.destfile>
          </systemPropertyVariables>
          <argLine>
            -javaagent:${project.build.directory}/${project.build.finalName}.jar=script:${project.basedir}/src/main/resources/btm-scripts/ehcache.btm
          </argLine>
        </configuration>
      </plugin>

      <!-- Plugins for package phase -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.0.2</version>
        <configuration>
          <archive>
            <manifestEntries>
              <Premain-Class>org.jboss.byteman.agent.Main</Premain-Class>
              <Agent-Class>org.jboss.byteman.agent.Main</Agent-Class>
              <Can-Redefine-Classes>true</Can-Redefine-Classes>
              <Can-Retransform-Classes>true</Can-Retransform-Classes>
            </manifestEntries>
          </archive>
        </configuration>
        <executions>
          <execution>
            <id>default-jar</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.1.0</version>
        <configuration>
          <createDependencyReducedPom>false</createDependencyReducedPom>
        </configuration>
        <executions>
          <execution>
            <id>generate-shaded-jar-for-tests</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>shade</goal>
            </goals>
          </execution>
        </executions>
      </plugin>


      <!-- Plugins for verify phase -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
        <version>3.0.5</version>
        <configuration>
          <xmlOutput>true</xmlOutput>
          <effort>Max</effort>
          <failOnError>${enforce.findbugs}</failOnError>
          <includeTests>false</includeTests>
          <maxRank>9</maxRank>
          <xmlOutputDirectory>${project.build.directory}/reports/</xmlOutputDirectory>
          <outputDirectory>${project.build.directory}/reports/</outputDirectory>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco.version}</version>
        <executions>
          <execution>
            <id>default-instrument</id>
            <goals>
              <goal>instrument</goal>
            </goals>
          </execution>
          <execution>
            <id>default-restore-instrumented-classes</id>
            <goals>
              <goal>restore-instrumented-classes</goal>
            </goals>
          </execution>
          <execution>
            <id>default-report</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
          <execution>
            <id>default-check</id>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <rules>
                <rule>
                  <element>BUNDLE</element>
                  <limits>
                    <limit>
                      <counter>COMPLEXITY</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>${minimum.coverage}</minimum>
                    </limit>
                  </limits>
                </rule>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
        <version>2.7</version>
        <configuration>
          <quiet>true</quiet>
          <formats>
            <format>html</format>
            <format>xml</format>
          </formats>
          <check />
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
