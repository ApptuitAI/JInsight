#
#  Copyright 2017 Agilx, Inc.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#

#RULE ehcache clone constructor entry
#CLASS net.sf.ehcache.Cache
#METHOD <init>(net.sf.ehcache.Cache)
#HELPER ai.apptuit.metrics.jinsight.modules.common.RuleHelper
#AT ENTRY
#IF TRUE
#DO traceThreadStack("main")
#ENDRULE

RULE ehcache clone constructor exit
CLASS net.sf.ehcache.Cache
METHOD <init>(net.sf.ehcache.Cache)
HELPER ai.apptuit.metrics.jinsight.modules.ehcache.EhcacheRuleHelper
AT EXIT
IF TRUE
DO monitor($this)
ENDRULE

RULE ehcache get entry
CLASS net.sf.ehcache.Cache
METHOD get(java.lang.Object)
HELPER ai.apptuit.metrics.jinsight.modules.ehcache.EhcacheRuleHelper
AT ENTRY
BIND
  tags = new String[]{"op", "get", "cache", $this.getName()}
IF TRUE
DO startTimer(EhcacheRuleHelper.ROOT_NAME.submetric("ops").withTags(tags))
ENDRULE

# TODO Handle AT EXCEPTION EXIT
RULE ehcache get exit
CLASS net.sf.ehcache.Cache
METHOD get(java.lang.Object)
HELPER ai.apptuit.metrics.jinsight.modules.ehcache.EhcacheRuleHelper
AT EXIT
BIND
  tags = new String[]{"op", "get", "cache", $this.getName()}
IF TRUE
DO stopTimer(EhcacheRuleHelper.ROOT_NAME.submetric("ops").withTags(tags))
ENDRULE

RULE ehcache put entry
CLASS net.sf.ehcache.Cache
METHOD put(net.sf.ehcache.Element, boolean)
HELPER ai.apptuit.metrics.jinsight.modules.ehcache.EhcacheRuleHelper
AT ENTRY
BIND
  tags = new String[]{"op", "put", "cache", $this.getName()}
IF TRUE
DO startTimer(EhcacheRuleHelper.ROOT_NAME.submetric("ops").withTags(tags))
ENDRULE

# TODO Handle AT EXCEPTION EXIT
RULE ehcache put exit
CLASS net.sf.ehcache.Cache
METHOD put(net.sf.ehcache.Element, boolean)
HELPER ai.apptuit.metrics.jinsight.modules.ehcache.EhcacheRuleHelper
AT EXIT
BIND
  tags = new String[]{"op", "put", "cache", $this.getName()}
IF TRUE
DO stopTimer(EhcacheRuleHelper.ROOT_NAME.submetric("ops").withTags(tags))
ENDRULE

RULE ehcache putIfAbsent entry
CLASS net.sf.ehcache.Cache
METHOD putIfAbsent(net.sf.ehcache.Element)
HELPER ai.apptuit.metrics.jinsight.modules.ehcache.EhcacheRuleHelper
AT ENTRY
BIND
  tags = new String[]{"op", "put", "cache", $this.getName()}
IF TRUE
DO startTimer(EhcacheRuleHelper.ROOT_NAME.submetric("ops").withTags(tags))
ENDRULE

# TODO Handle AT EXCEPTION EXIT
RULE ehcache putIfAbsent exit
CLASS net.sf.ehcache.Cache
METHOD putIfAbsent(net.sf.ehcache.Element)
HELPER ai.apptuit.metrics.jinsight.modules.ehcache.EhcacheRuleHelper
AT EXIT
BIND
  tags = new String[]{"op", "put", "cache", $this.getName()}
IF TRUE
DO stopTimer(EhcacheRuleHelper.ROOT_NAME.submetric("ops").withTags(tags))
ENDRULE